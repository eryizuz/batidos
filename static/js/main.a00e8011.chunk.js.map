{"version":3,"sources":["types/index.js","reducers/batidosReducer.js","reducers/validacionReducer.js","reducers/index.js","store.js","components/Principal.js","components/FrutasOptions.js","logo.png","components/Header.js","config/axios.js","actions/batidosActions.js","actions/validacionActions.js","components/CrearBatido.js","components/Spinner.js","corazon.png","components/Batido.js","components/Verbatidos.js","App.js","reportWebVitals.js","index.js"],"names":["VALIDAR_FORMULARIO","VALIDAR_FORMULARIO_EXITO","VALIDAR_FORMULARIO_ERROR","AGREGAR_BATIDO","AGREGAR_BATIDO_EXITO","AGREGAR_BATIDO_ERROR","COMENZAR_DESCARGAR_BATIDOS","DESCARGA_BATIDOS_EXITOSA","DESCARGA_BATIDOS_ERROR","initialState","batidos","error","loading","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Principal","className","to","FrutasOptions","frutas","guardarFrutas","guardarOpcion","nuevasOpciones","filter","frutass","name","onChange","e","target","value","map","opcion","Header","src","imagen","alt","clienteAxios","axios","create","baseURL","nuevoBatido","agregarbatidoExito","batido","agregarbatidoError","obtenerBatidosComienzo","descargaBatidosExitosa","descargaBatidosError","iniciarValidacion","CrearBatido","history","useState","nombre","guardarNombre","otrafrutas","guardarotrafrutas","liquido","guardarLiquido","proteina","guardarProteina","sabor","guardarSabor","click","guardarClick","valorFruta","guardarValorFruta","valorOtraFruta","guardarOtraValorFruta","valorLiquido","guardarValorLiquido","valorTotal","guardarValorTotal","dispatch","useDispatch","agregarBatido","post","then","res","console","log","catch","crearNuevoBatidoAction","validarFormulario","exitoValidacion","errorValidacion","useSelector","useEffect","valorSumado","parseInt","sumaTotal","onSubmit","preventDefault","Swal","fire","icon","title","text","push","nombreFruta","nombreLiquido","id","autoComplete","placeholder","form","onClick","Spinner","Batido","corazon","length","fruta","VerBatidos","recargar","guardarRecargar","get","data","er","_id","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a00e8011.chunk.js","sourcesContent":["export const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const VALIDAR_FORMULARIO_EXITO = 'VALIDAR_FORMULARIO_EXITO';\r\nexport const VALIDAR_FORMULARIO_ERROR = 'VALIDAR_FORMULARIO_ERROR';\r\n\r\nexport const AGREGAR_BATIDO = 'AGREGAR_BATIDO';\r\nexport const AGREGAR_BATIDO_EXITO = 'AGREGAR_BATIDO_EXITO';\r\nexport const AGREGAR_BATIDO_ERROR = 'AGREGAR_BATIDO_ERROR';\r\n\r\nexport const COMENZAR_DESCARGAR_BATIDOS = 'COMENZAR_DESCARGAR_BATIDOS';\r\nexport const DESCARGA_BATIDOS_EXITOSA = 'DESCARGA_BATIDOS_EXITOSA';\r\nexport const DESCARGA_BATIDOS_ERROR = 'DESCARGA_BATIDOS_ERROR';\r\n\r\nexport const COMENZAR_SUMAR_INGREDIENTES = 'COMENZAR_SUMAR_INGREDIENTES';\r\nexport const SUMAR_EXITO = 'SUMAR_EXITO';\r\n\r\n\r\n","import {\r\n    AGREGAR_BATIDO,\r\n    AGREGAR_BATIDO_EXITO,\r\n    AGREGAR_BATIDO_ERROR,\r\n    COMENZAR_DESCARGAR_BATIDOS,\r\n    DESCARGA_BATIDOS_EXITOSA,\r\n    DESCARGA_BATIDOS_ERROR,\r\n} from '../types';\r\n\r\n\r\n//cada reducer tiene su propio state\r\nconst initialState = {\r\n    batidos: [],\r\n    error: null,\r\n    loading: false,\r\n}\r\n\r\nexport default function agregarBatidoAction(state = initialState, action) {\r\n    switch(action.type) {\r\n        case AGREGAR_BATIDO:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        case AGREGAR_BATIDO_EXITO:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                batidos: [...state.batidos, action.payload]\r\n            }\r\n        case AGREGAR_BATIDO_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case COMENZAR_DESCARGAR_BATIDOS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DESCARGA_BATIDOS_EXITOSA:\r\n            return {\r\n                ...state,\r\n                batidos: action.payload,\r\n                loading: false\r\n            }\r\n        case DESCARGA_BATIDOS_ERROR:\r\n            return {\r\n                ...state,\r\n                batidos: [],\r\n                error: true,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    VALIDAR_FORMULARIO,\r\n    VALIDAR_FORMULARIO_EXITO,\r\n    VALIDAR_FORMULARIO_ERROR\r\n} from '../types';\r\n\r\n//state initial\r\n\r\nconst initialState = {\r\n    error: null\r\n}\r\n\r\nexport default function validarFormularioReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case VALIDAR_FORMULARIO:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case VALIDAR_FORMULARIO_EXITO:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case VALIDAR_FORMULARIO_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport batidosReducer from './batidosReducer';\r\nimport validacionReducer from './validacionReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    batidos: batidosReducer,\r\n    error: validacionReducer\r\n});","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n) );\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Principal = () => {\r\n    return ( \r\n        <div className=\"contenedor-flex\">\r\n            <Link to=\"/batidos/nuevo\" className=\"link btn btn-success\">Crear Batidos</Link>\r\n            <Link to=\"/batidos\" className=\"link btn btn-success\">Ver batidos Creados</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Principal;","import React from 'react';\r\n\r\nconst FrutasOptions = ({frutas, guardarFrutas, guardarOpcion}) => {\r\n\r\n    let opcionesFrutas = ['Limon','Strawberry','Sandia','Kiwi','Piña','Banana','Naranja'];\r\n\r\n    const nuevasOpciones = opcionesFrutas.filter(frutass => frutass !== frutas );\r\n\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label>Seleccione Otra Fruta</label>\r\n            <select name=\"nombrefruta\" className=\"form-control\" onChange={e => {\r\n                guardarFrutas(e.target.value);\r\n                guardarOpcion(true);\r\n            }} >\r\n                <option value=\"\"></option>\r\n                {nuevasOpciones.map(opcion => (\r\n                    <option value={opcion} key={opcion} >{opcion}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FrutasOptions;","export default __webpack_public_path__ + \"static/media/logo.650ef60c.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport imagen from '../logo.png';\r\nconst Header = () => {\r\n\r\n\r\n    return ( \r\n\r\n            <div>\r\n                <Link to='/' className='btn submit' >\r\n                    <i className=\"fas fa-arrow-circle-left\"></i>\r\n                    {' '}\r\n                    Volver\r\n                </Link>\r\n                <img src={imagen} className=\"logo\" alt=\"imagen\" />\r\n            </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: 'http://localhost:4000'\r\n});\r\n\r\nexport default clienteAxios;","import {\r\n    AGREGAR_BATIDO,\r\n    AGREGAR_BATIDO_EXITO,\r\n    AGREGAR_BATIDO_ERROR,\r\n    COMENZAR_DESCARGAR_BATIDOS,\r\n    DESCARGA_BATIDOS_EXITOSA,\r\n    DESCARGA_BATIDOS_ERROR,\r\n} from '../types';\r\n\r\nimport clienteAxios from '../config/axios';\r\n\r\n\r\n//crear un nuevo batido - funcion principal\r\n\r\nexport function crearNuevoBatidoAction(batido) {\r\n    return (dispatch) => {\r\n        dispatch( nuevoBatido() );\r\n\r\n        //insertar en la API\r\n        clienteAxios.post('/batidos/nuevo', batido)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch( agregarbatidoExito(batido) );\r\n            })\r\n            .catch(error => {\r\n                dispatch( agregarbatidoError(error) )\r\n            })\r\n    }\r\n}\r\n\r\nexport const nuevoBatido = () => ({\r\n    type: AGREGAR_BATIDO\r\n})\r\n\r\nexport const agregarbatidoExito = batido => ({\r\n    type: AGREGAR_BATIDO_EXITO,\r\n    payload: batido\r\n})\r\n\r\nexport const agregarbatidoError = error => ({\r\n    type: AGREGAR_BATIDO_ERROR,\r\n    payload: error\r\n})\r\n\r\nexport function descargarBatidosAction() {\r\n    return (dispatch) => {\r\n        dispatch(obtenerBatidosComienzo());\r\n\r\n        //consultar api\r\n        clienteAxios.get('/batidos')\r\n            .then(res => {\r\n                //console.log(res)\r\n                dispatch( descargaBatidosExitosa(res.data) );\r\n            })\r\n            .catch(er => {\r\n                //console.log(er)\r\n                dispatch( descargaBatidosError() );\r\n            })\r\n    }\r\n}\r\n\r\nexport const obtenerBatidosComienzo = () => ({\r\n    type: COMENZAR_DESCARGAR_BATIDOS\r\n})\r\n\r\nexport const descargaBatidosExitosa = (batidos) => ({\r\n    type: DESCARGA_BATIDOS_EXITOSA,\r\n    payload: batidos\r\n\r\n})\r\n\r\nexport const descargaBatidosError = () => ({\r\n    type: DESCARGA_BATIDOS_ERROR\r\n\r\n})\r\n","import {\r\n    VALIDAR_FORMULARIO,\r\n    VALIDAR_FORMULARIO_EXITO,\r\n    VALIDAR_FORMULARIO_ERROR\r\n} from '../types';\r\n\r\n//funcion principal para validar\r\n\r\nexport  function validarFormularioAction(){\r\n    return (dispatch) => {\r\n        dispatch( iniciarValidacion() );\r\n    }\r\n}\r\n\r\nexport const iniciarValidacion = () => {\r\n    return {\r\n        type: VALIDAR_FORMULARIO\r\n    }\r\n}\r\nexport const validacionExito = () => {\r\n    return {\r\n        type: VALIDAR_FORMULARIO_EXITO\r\n    }\r\n}\r\n\r\nexport const validacionError = () => {\r\n    return {\r\n        type: VALIDAR_FORMULARIO_ERROR\r\n    }\r\n}","import React, { useState, useEffect, Fragment } from 'react';\r\nimport FrutasOptions from './FrutasOptions';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Header from './Header';\r\n\r\n//redux\r\nimport { crearNuevoBatidoAction } from '../actions/batidosActions';\r\nimport { validarFormularioAction, validacionExito, validacionError } from '../actions/validacionActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst CrearBatido = ({history}) => {\r\n\r\n    const [nombre, guardarNombre ] = useState('');\r\n\r\n    const [frutas, guardarFrutas ] = useState('');\r\n    const [otrafrutas, guardarotrafrutas] = useState('');\r\n\r\n    const [liquido, guardarLiquido ] = useState('');\r\n\r\n    const [proteina, guardarProteina ] = useState('');\r\n    const [sabor, guardarSabor ] = useState('');\r\n\r\n    const [click, guardarClick ] = useState(false);\r\n    const [opcion, guardarOpcion] = useState(false);\r\n\r\n    const [valorFruta, guardarValorFruta] = useState('');\r\n    const [valorOtraFruta, guardarOtraValorFruta] = useState('');\r\n\r\n    const [valorLiquido, guardarValorLiquido ] = useState('');\r\n\r\n    const [valorTotal, guardarValorTotal] = useState(0);\r\n\r\n    //crear nuevo producto\r\n\r\n    const dispatch = useDispatch();\r\n    const agregarBatido = (batido) => dispatch( crearNuevoBatidoAction(batido) );\r\n    const validarFormulario = () => dispatch( validarFormularioAction() );\r\n    const exitoValidacion = () => dispatch( validacionExito() );\r\n    const errorValidacion = () => dispatch( validacionError() );\r\n\r\n    //seleccionamos el state de redux\r\n    const error = useSelector(state => state.error.error);\r\n\r\n    useEffect( () => {\r\n\r\n        if(!frutas){\r\n            return;\r\n        } else {\r\n            //aqui tenemos que darle valor a la fruta deacuerdo a la table de valores de la prueba\r\n            /* let valoresFrutas = {\r\n                Sandia: 6,\r\n                Strawberry: 5,\r\n                Piña: 8,\r\n                Narajanja: 10,\r\n                Kiwi: 7,\r\n                Banana: 9,\r\n                Limon: 4,\r\n\r\n            } */\r\n            //valores de la primera fruta\r\n\r\n            if(frutas === 'Limon'){\r\n                guardarValorFruta(4)\r\n            }else if(frutas === 'Sandia') {\r\n                guardarValorFruta(6)\r\n            }else if(frutas === 'Strawberry') {\r\n                guardarValorFruta(5)\r\n            }else if(frutas === 'Piña') {\r\n                guardarValorFruta(8)\r\n            }else if(frutas === 'Narajanja') {\r\n                guardarValorFruta(10)\r\n            }else if(frutas === 'Kiwi') {\r\n                guardarValorFruta(7)\r\n            }else if(frutas === 'Banana') {\r\n                guardarValorFruta(9)\r\n            }\r\n\r\n            //valores de la segunda\r\n\r\n            if(otrafrutas === 'Limon'){\r\n                guardarOtraValorFruta(4)\r\n            }else if(otrafrutas === 'Sandia') {\r\n                guardarOtraValorFruta(6)\r\n            }else if(otrafrutas === 'Strawberry') {\r\n                guardarOtraValorFruta(5)\r\n            }else if(otrafrutas === 'Piña') {\r\n                guardarOtraValorFruta(8)\r\n            }else if(otrafrutas === 'Naranja') {\r\n                guardarOtraValorFruta(10)\r\n            }else if(otrafrutas === 'Kiwi') {\r\n                guardarOtraValorFruta(7)\r\n            }else if(otrafrutas === 'Banana') {\r\n                guardarOtraValorFruta(9)\r\n            }\r\n        }\r\n\r\n        if(liquido){\r\n            /* let valoresFrutas = {\r\n                Leche: 4,\r\n                Agua: 0,\r\n                Aguadecoco: 2,\r\n                Lechedesoya: 3,\r\n                lechedealmendra: 1\r\n\r\n            } */\r\n            if(liquido === 'Leche'){\r\n                guardarValorLiquido(4)\r\n            }else if(liquido === 'Agua') {\r\n                guardarValorLiquido(0)\r\n            }else if(liquido === 'Agua de coco') {\r\n                guardarValorLiquido(2)\r\n            }else if(liquido === 'Leche de soya') {\r\n                guardarValorLiquido(3)\r\n            }else if(liquido === 'Lecha de almendra') {\r\n                guardarValorLiquido(1)\r\n            }\r\n        }\r\n        const sumaTotal = () => {\r\n            if(!valorOtraFruta) {\r\n                const valorSumado = parseInt(valorFruta + valorLiquido, 10);\r\n                guardarValorTotal(valorSumado);\r\n\r\n\r\n            }else {\r\n                const valorSumado = parseInt(valorFruta+ valorOtraFruta + valorLiquido, 10);\r\n                guardarValorTotal(valorSumado);\r\n                console.log(valorTotal);\r\n            }\r\n        }\r\n        sumaTotal();\r\n        /* const valorSumado = parseInt(valorFruta + valorLiquido, 10);\r\n        guardarValorTotal(valorSumado); */\r\n\r\n    },[frutas,otrafrutas, liquido, valorFruta, valorOtraFruta, valorLiquido, valorTotal])\r\n\r\n    const enviarDatos = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        validarFormulario();\r\n        \r\n\r\n        // validamos que todso los campos esten llenos\r\n\r\n        if(nombre === '' || frutas === '' || liquido === '' || proteina === '' || sabor === ''){\r\n            errorValidacion();\r\n            if(error){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Todos los campos son obligatorios',\r\n                    text: 'por favor complete el/los campos que le falten',\r\n                  })\r\n            }\r\n            return;\r\n        }\r\n\r\n        //hacer suamtoria de valores para mandarlo a la db\r\n\r\n        exitoValidacion();\r\n        Swal.fire(\r\n            'Felicidades!',\r\n            'Su batido se creó correctamente!',\r\n            'success'\r\n          )\r\n          history.push('/batidos');\r\n\r\n        // hacemos un objeto para mandarlo a la db \r\n\r\n        //aki valido si el cliente le agrega otra fruta a la vaina njd \r\n\r\n        if(!opcion) {\r\n\r\n            \r\n            let batidoObjetoModelo = {\r\n                nombre,\r\n                frutas: [\r\n                    {\r\n                        nombreFruta: frutas,\r\n                        valorFruta\r\n                    }\r\n                ],\r\n                liquido: {\r\n                    nombreLiquido: liquido,\r\n                    valorLiquido: valorLiquido\r\n                },\r\n                proteina,\r\n                sabor,\r\n                valorTotal\r\n            }\r\n            \r\n            //console.log(batidoObjetoModelo);\r\n            agregarBatido(batidoObjetoModelo);\r\n        } else {\r\n\r\n            let batidoObjetoModelo = {\r\n                nombre,\r\n                frutas: [\r\n                    {\r\n                        nombreFruta: frutas,\r\n                        valorFruta\r\n                    },\r\n                    {\r\n                        nombreFruta: otrafrutas,\r\n                        valorFruta: valorOtraFruta\r\n                    }\r\n                ],\r\n                liquido: {\r\n                    nombreLiquido: liquido,\r\n                    valorLiquido: valorLiquido\r\n                },\r\n                proteina,\r\n                sabor,\r\n                valorTotal\r\n            }\r\n            /* const valorSumado = parseInt(batidoObjetoModelo.frutas[0].valorFruta + batidoObjetoModelo.frutas[1].valorFruta + valorLiquido, 10);\r\n            guardarValorTotal(valorSumado); */\r\n            //console.log(valorTotal);\r\n\r\n            //console.log(batidoObjetoModelo);\r\n            agregarBatido(batidoObjetoModelo);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const agregarCompo = () => {\r\n\r\n\r\n        guardarClick(true);\r\n\r\n    }\r\n\r\n    const FrutaState = e => {\r\n        //agrego la fruta al state (local)\r\n        guardarFrutas(e.target.value);\r\n\r\n        \r\n    }\r\n\r\n\r\n    return ( \r\n\r\n        <Fragment>\r\n\r\n        <Header />\r\n        <div className=\"contenedor\">\r\n            {/* <Link to='/' className='btn submit' >Volver</Link> */}\r\n            <div className=\"borde\">\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"formulario\">\r\n                    <form onSubmit={enviarDatos} id=\"CreateForm\">\r\n        \r\n                        <div className=\"form-group\">\r\n                            <label>Escriba el nombre del batido</label>\r\n                            <input type=\"text\" autoComplete=\"off\" className=\"form-control\" placeholder=\"Nombre de batido\" name=\"nombre\" onChange={e => guardarNombre(e.target.value)} value={nombre} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group \">\r\n                            <label>Seleccione Una Fruta</label>\r\n                            <select name=\"nombrefruta\" className=\"form-control\" onChange={FrutaState} >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Limon\">limon</option>\r\n                                <option value=\"Strawberry\">Strawberry</option>\r\n                                <option value=\"Sandia\">Sandia</option>\r\n                                <option value=\"Kiwi\">kiwi</option>\r\n                                <option value=\"Piña\">piña</option>\r\n                                <option value=\"Banana\">Banana</option>\r\n                                <option value=\"Naranja\">Naranja</option>\r\n\r\n                            </select>\r\n\r\n                            \r\n                            <br/>\r\n\r\n                            \r\n                        </div>\r\n\r\n                        {(click)? <FrutasOptions frutas={frutas} guardarFrutas={guardarotrafrutas} guardarOpcion={guardarOpcion} /> : null }\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Seleccione el liquido</label>\r\n                            <select name=\"liquido\" className=\"form-control\" onChange={ (e) => guardarLiquido(e.target.value)} >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Agua\">Agua</option>\r\n                                <option value=\"Lecha de almendra\">Leche de Almendra</option>\r\n                                <option value=\"Agua de coco\">Agua de coco</option>\r\n                                <option value=\"Leche de soya\">Leche de soya</option>\r\n                                <option value=\"Leche\">Leche</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Seleccione la proteina</label>\r\n                            <select name=\"proteina\" className=\"form-control\" onChange={ (e) => guardarProteina(e.target.value)} >\r\n                                <option value=\"\"></option>\r\n                                <option value=\"Sin sabor\">Sin sabor</option>\r\n                                <option value=\"Vainilla\">Vainilla</option>\r\n                                <option value=\"Chocolate\">Chocolate</option>\r\n                                <option value=\"Coco\">Coco</option>\r\n                                <option value=\"Caramelo\">Caramelo</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>puntue del 1 al 100</label>\r\n                            <input type=\"number\" className=\"form-control\" value={sabor} onChange={ (e) => guardarSabor(e.target.value)} />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-block submit\" form=\"CreateForm\" >Crear</button>\r\n                    </form>\r\n\r\n                    {(!click)? \r\n                    <div className=\"contenedor-derecha\">\r\n                        <button name=\"boton\" onClick={agregarCompo} className=\"btn btn-block submit derecha\">Agregar otra fruta</button>\r\n                    </div>\r\n                    : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n     );\r\n    \r\n}\r\n \r\nexport default CrearBatido;","import React from 'react';\r\nimport '../Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-chase\">\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n            <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/corazon.9a8d6016.png\";","import React from 'react';\r\n\r\nimport corazon from '../corazon.png';\r\n\r\n \r\n\r\nconst Batido = ({batido}) => {\r\n    \r\n    const {frutas, liquido, proteina, sabor, valorTotal} = batido;\r\n\r\n    \r\n        /* const sumatoria = frutas[0].valorFruta + liquido.valorLiquido; */\r\n        \r\n\r\n   /*  if(frutas.length > 1) {\r\n        frutas.map(fruta => (\r\n            \r\n        ))\r\n    }else {\r\n        console.log(frutas[0], \"una\");\r\n    } */\r\n    \r\n    //console.log(batido.liquido);\r\n    return ( \r\n        <div className=\"contenedor-batido\">\r\n            <h3 className=\"titulo\">{batido.nombre}</h3>\r\n            <div className=\"corazon\">\r\n                <img src={corazon} alt=\"algo\" className=\"corazon\" />\r\n                <p className=\"numero-corazon\">\r\n                     <span>\r\n                         {valorTotal}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <h3>Ingredientes</h3>\r\n                <p>\r\n                    Frutas:\r\n                    <span>\r\n                    {\r\n                    (frutas.length > 1)?\r\n                    \r\n                    frutas.map(fruta => (\r\n                        <span key={fruta.valorFruta}> {fruta.nombreFruta}</span>\r\n                    ))\r\n                \r\n                    : <span>{frutas[0].nombreFruta}</span>\r\n                    }\r\n                    </span>\r\n                </p>\r\n\r\n                <p>Liquido: {liquido.nombreLiquido}</p>\r\n\r\n                <p>Proteina: {proteina} </p>\r\n                <p className=\"sabor\">{sabor}% </p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Batido;","import React, { useState, useEffect, Fragment} from 'react';\r\nimport Spinner from './Spinner';\r\n\r\nimport Header from './Header';\r\n\r\n/* import Swal from 'sweetalert2'; */\r\n\r\n//redux\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { descargarBatidosAction } from '../actions/batidosActions';\r\n\r\n//componente qeu va a iterar los batidos\r\nimport Batido from './Batido';\r\nconst VerBatidos = ({history}) => {\r\n\r\n    const [recargar, guardarRecargar ] = useState(true);\r\n    \r\n   const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        if(recargar){\r\n            const comenzarDescarga = () => {\r\n                dispatch( descargarBatidosAction() );\r\n            }\r\n    \r\n            comenzarDescarga();\r\n            guardarRecargar(false);\r\n        }\r\n    },[recargar, dispatch])\r\n\r\n    //acceder al state de redux\r\n\r\n    const loading = useSelector( state => state.batidos.loading );\r\n    const batidos = useSelector( state => state.batidos.batidos );\r\n    /* const error = useSelector(state => state.batidos.error); */\r\n    return ( \r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"contenedor-batidos\">\r\n                {\r\n                (loading)? <Spinner />\r\n                : <div className=\"contenedor-ver\">\r\n                    <h2 className=\"titulo-batido\">Batidos Creados</h2>\r\n                    <div className=\"batidos\">\r\n                        {batidos.map(batido => (\r\n                            <Batido batido={batido} key={batido._id} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            }\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default VerBatidos;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n//components\nimport Principal from './components/Principal';\nimport CrearBatido from './components/CrearBatido';\nimport VerBatidos from './components/Verbatidos';\n\n\nfunction App() {\n\n  return (\n    <Router>\n\n      <Provider store={store}>\n        <div className=\"container\">\n          <Switch>\n            \n            <Route exact path='/' component={Principal} />\n\n            <Route exact path='/batidos' component={VerBatidos} />\n\n            <Route exact path='/batidos/nuevo' component={CrearBatido} />\n\n            \n\n          </Switch>\n\n        </div>\n      </Provider>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}